``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Ephraim", "Ziwoya")
    My name is Ephraim Ziwoya

::

    >>> say_my_name("Patric Effa", "Elvis")
    My name is Patrick Effa Elvis

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Ziwoya")
    My name is Ziwoya

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(8, "Peter")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Marvel", ["Ireen", "Linda", "Solomon"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Linda":8, "Peter": 48}, 6.8)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
